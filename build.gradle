plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.0'
	id 'io.spring.dependency-management' version '1.1.0'

	// 자바 테스트 커버리지 등 모니터링 툴
	id 'jacoco'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.2'
	compileOnly 'jakarta.servlet:jakarta.servlet-api:6.0.0'
	implementation 'org.springframework.session:spring-session-jdbc:3.0.0'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'me.mattstudios.utils:commonmark-java-mf:0.1.3'

	// Querydsl 추가
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}

// jacoco plugin 설정
jacoco {
	toolVersion = '0.8.12'
}
jacocoTestReport {
	dependsOn test //jacoco 보고서가 만들어지기 전에 'test' 태스크가 실행되어야 함.
	reports {
		html.enabled(true) //직접 브라우저로 열어볼수 있게 html 보고서 생성
		xml.enabled(true) //Codecov 등과 연동 가능하게 xml 보고서 생성
	}
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy(jacocoTestReport) //'test' 태스크가 끝나면 jacoco 로 보고서 생성.
}